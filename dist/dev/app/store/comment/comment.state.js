"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var CommentActions = require("./comment.actions");
var common_functions_1 = require("../../shared/utilities/common.functions");
var defaultCommentPagination = { pageSize: 100, currentPage: 1, hasNextPage: false, hasPreviousPage: false };
exports.initialState = {
    formSubmitLabel: 'COMMENTS.SUBMIT_BTN_LABEL',
    commentBeingEdited: null,
    activeObjectType: null,
    formMode: 'ADD',
    cart: { items: [], pagination: defaultCommentPagination },
    collection: { items: [], pagination: defaultCommentPagination },
    quote: { items: [], pagination: defaultCommentPagination },
    lineItem: { items: [], pagination: defaultCommentPagination },
    counts: {}
};
function reducer(state, action) {
    if (state === void 0) { state = exports.initialState; }
    if (state === null)
        state = exports.initialState;
    switch (action.type) {
        case CommentActions.ChangeFormModeToEdit.Type: {
            return __assign({}, common_functions_1.Common.clone(state), { formMode: 'EDIT', formSubmitLabel: 'COMMENTS.SAVE_BTN_LABEL', commentBeingEdited: action.commentBeingEdited });
        }
        case CommentActions.ChangeFormModeToAdd.Type: {
            return __assign({}, common_functions_1.Common.clone(state), { formMode: 'ADD', formSubmitLabel: 'COMMENTS.SUBMIT_BTN_LABEL', commentBeingEdited: null });
        }
        case CommentActions.Load.Type:
        case CommentActions.Remove.Type: {
            var activeObjectType = action.parentObject.nestedObjectId
                ? 'lineItem'
                : action.parentObject.objectType;
            return __assign({}, common_functions_1.Common.clone(state), { activeObjectType: activeObjectType });
        }
        case CommentActions.FormSubmitSuccess.Type:
        case CommentActions.RemoveSuccess.Type:
        case CommentActions.LoadSuccess.Type: {
            var stateClone = common_functions_1.Common.clone(state);
            return __assign({}, stateClone, (_a = {}, _a[stateClone.activeObjectType] = __assign({}, action.comments), _a.formMode = 'ADD', _a.formSubmitLabel = 'COMMENTS.SUBMIT_BTN_LABEL', _a.commentBeingEdited = null, _a));
        }
        case CommentActions.GetCountsSuccess.Type: {
            return __assign({}, common_functions_1.Common.clone(state), { counts: action.counts });
        }
        case CommentActions.FormSubmit.Type: {
            var stateClone = common_functions_1.Common.clone(state);
            return __assign({}, stateClone, { commentBeingEdited: __assign({}, stateClone.commentBeingEdited, action.comment) });
        }
        default: {
            return state;
        }
    }
    var _a;
}
exports.reducer = reducer;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9zdG9yZS9jb21tZW50L2NvbW1lbnQuc3RhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGtEQUFvRDtBQUtwRCw0RUFBaUU7QUFrQmpFLElBQU0sd0JBQXdCLEdBQWUsRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLENBQUM7QUFFOUcsUUFBQSxZQUFZLEdBQVU7SUFDakMsZUFBZSxFQUFFLDJCQUEyQjtJQUM1QyxrQkFBa0IsRUFBRSxJQUFJO0lBQ3hCLGdCQUFnQixFQUFFLElBQUk7SUFDdEIsUUFBUSxFQUFFLEtBQUs7SUFDZixJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSx3QkFBd0IsRUFBRTtJQUN6RCxVQUFVLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSx3QkFBd0IsRUFBRTtJQUMvRCxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSx3QkFBd0IsRUFBRTtJQUMxRCxRQUFRLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSx3QkFBd0IsRUFBRTtJQUM3RCxNQUFNLEVBQUUsRUFBRTtDQUNYLENBQUM7QUFFRixpQkFBd0IsS0FBMkIsRUFBRSxNQUEwQjtJQUF2RCxzQkFBQSxFQUFBLFFBQWUsb0JBQVk7SUFDakQsRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQztRQUFDLEtBQUssR0FBRyxvQkFBWSxDQUFDO0lBRXpDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLEtBQUssY0FBYyxDQUFDLG9CQUFvQixDQUFDLElBQUksRUFBRSxDQUFDO1lBQzlDLE1BQU0sY0FDRCx5QkFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFDdEIsUUFBUSxFQUFFLE1BQU0sRUFDaEIsZUFBZSxFQUFFLHlCQUF5QixFQUMxQyxrQkFBa0IsRUFBRSxNQUFNLENBQUMsa0JBQWtCLElBQzdDO1FBQ0osQ0FBQztRQUVELEtBQUssY0FBYyxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxDQUFDO1lBQzdDLE1BQU0sY0FDRCx5QkFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFDdEIsUUFBUSxFQUFFLEtBQUssRUFDZixlQUFlLEVBQUUsMkJBQTJCLEVBQzVDLGtCQUFrQixFQUFFLElBQUksSUFDeEI7UUFDSixDQUFDO1FBRUQsS0FBSyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztRQUM5QixLQUFLLGNBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDaEMsSUFBTSxnQkFBZ0IsR0FBZSxNQUFNLENBQUMsWUFBWSxDQUFDLGNBQWM7Z0JBQ3JFLENBQUMsQ0FBQyxVQUFVO2dCQUNaLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQztZQUNuQyxNQUFNLGNBQ0QseUJBQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQ3RCLGdCQUFnQixFQUFFLGdCQUFnQixJQUNsQztRQUNKLENBQUM7UUFFRCxLQUFLLGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUM7UUFDM0MsS0FBSyxjQUFjLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQztRQUN2QyxLQUFLLGNBQWMsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDckMsSUFBTSxVQUFVLEdBQVUseUJBQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDOUMsTUFBTSxjQUNELFVBQVUsZUFDWixVQUFVLENBQUMsZ0JBQWdCLGlCQUN2QixNQUFNLENBQUMsUUFBUSxHQUVwQixXQUFRLEdBQUUsS0FBSyxFQUNmLGtCQUFlLEdBQUUsMkJBQTJCLEVBQzVDLHFCQUFrQixHQUFFLElBQUksT0FDeEI7UUFDSixDQUFDO1FBRUQsS0FBSyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDMUMsTUFBTSxjQUNELHlCQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUN0QixNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU0sSUFDckI7UUFDSixDQUFDO1FBRUQsS0FBSyxjQUFjLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3BDLElBQU0sVUFBVSxHQUFVLHlCQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBRTlDLE1BQU0sY0FDRCxVQUFVLElBQ2Isa0JBQWtCLGVBQ2IsVUFBVSxDQUFDLGtCQUFrQixFQUFLLE1BQU0sQ0FBQyxPQUFPLEtBRXJEO1FBQ0osQ0FBQztRQUVELFNBQVMsQ0FBQztZQUNSLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDZixDQUFDO0lBQ0gsQ0FBQzs7QUFDSCxDQUFDO0FBdEVELDBCQXNFQyIsImZpbGUiOiJhcHAvc3RvcmUvY29tbWVudC9jb21tZW50LnN0YXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgQ29tbWVudEFjdGlvbnMgZnJvbSAnLi9jb21tZW50LmFjdGlvbnMnO1xuaW1wb3J0IHtcbiAgQ29tbWVudCwgQ29tbWVudHMsIE9iamVjdFR5cGUsIENvbW1lbnRGb3JtTW9kZSwgQ29tbWVudENvdW50c0FwaVJlc3BvbnNlLCBDb21tZW50Q291bnRzXG59IGZyb20gJy4uLy4uL3NoYXJlZC9pbnRlcmZhY2VzL2NvbW1lbnQuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBhZ2luYXRpb24gfSBmcm9tICcuLi8uLi9zaGFyZWQvaW50ZXJmYWNlcy9jb21tb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IENvbW1vbiB9IGZyb20gJy4uLy4uL3NoYXJlZC91dGlsaXRpZXMvY29tbW9uLmZ1bmN0aW9ucyc7XG5cbi8vIEkgd291bGQgbG92ZSB0byB0YWtlIGFkdmFudGFnZSBvZiBvdXIgT2JqZWN0VHlwZSB0eXBlIGhlcmUsIGJ1dCBjdXJyZW50bHkgY2FuJ3QgZmluZCBhIHdheSB0byBkbyBpdCAoUi5FLiAwOC8xMC8yMDE3KVxuLy8gZm9yIHRoZSB0aW1lIGJlaW5nLCBtYW51YWxseSBhZGQgdG8gdGhpcyBpbnRlcmZhY2Ugd2hlbiBhZGRpbmcgY29tbWVudHMgdG8gY2FydCwgcXVvdGUsIGV0Yy5cbi8vIGZvciByZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9NaWNyb3NvZnQvVHlwZVNjcmlwdC9pc3N1ZXMvMjQ5MSBhbmQgaHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9UeXBlU2NyaXB0L3B1bGwvMTIxMTRcbmV4cG9ydCBpbnRlcmZhY2UgU3RhdGUge1xuICByZWFkb25seSBmb3JtU3VibWl0TGFiZWw6IHN0cmluZztcbiAgcmVhZG9ubHkgY29tbWVudEJlaW5nRWRpdGVkOiBDb21tZW50O1xuICByZWFkb25seSBhY3RpdmVPYmplY3RUeXBlOiBPYmplY3RUeXBlO1xuICByZWFkb25seSBmb3JtTW9kZTogQ29tbWVudEZvcm1Nb2RlO1xuICByZWFkb25seSBjYXJ0PzogQ29tbWVudHM7XG4gIHJlYWRvbmx5IGNvbGxlY3Rpb24/OiBDb21tZW50cztcbiAgcmVhZG9ubHkgcXVvdGU/OiBDb21tZW50cztcbiAgcmVhZG9ubHkgb3JkZXI/OiBDb21tZW50cztcbiAgcmVhZG9ubHkgbGluZUl0ZW0/OiBDb21tZW50cztcbiAgcmVhZG9ubHkgY291bnRzPzogQ29tbWVudENvdW50cztcbn1cblxuY29uc3QgZGVmYXVsdENvbW1lbnRQYWdpbmF0aW9uOiBQYWdpbmF0aW9uID0geyBwYWdlU2l6ZTogMTAwLCBjdXJyZW50UGFnZTogMSwgaGFzTmV4dFBhZ2U6IGZhbHNlLCBoYXNQcmV2aW91c1BhZ2U6IGZhbHNlIH07XG5cbmV4cG9ydCBjb25zdCBpbml0aWFsU3RhdGU6IFN0YXRlID0ge1xuICBmb3JtU3VibWl0TGFiZWw6ICdDT01NRU5UUy5TVUJNSVRfQlROX0xBQkVMJyxcbiAgY29tbWVudEJlaW5nRWRpdGVkOiBudWxsLFxuICBhY3RpdmVPYmplY3RUeXBlOiBudWxsLFxuICBmb3JtTW9kZTogJ0FERCcsXG4gIGNhcnQ6IHsgaXRlbXM6IFtdLCBwYWdpbmF0aW9uOiBkZWZhdWx0Q29tbWVudFBhZ2luYXRpb24gfSxcbiAgY29sbGVjdGlvbjogeyBpdGVtczogW10sIHBhZ2luYXRpb246IGRlZmF1bHRDb21tZW50UGFnaW5hdGlvbiB9LFxuICBxdW90ZTogeyBpdGVtczogW10sIHBhZ2luYXRpb246IGRlZmF1bHRDb21tZW50UGFnaW5hdGlvbiB9LFxuICBsaW5lSXRlbTogeyBpdGVtczogW10sIHBhZ2luYXRpb246IGRlZmF1bHRDb21tZW50UGFnaW5hdGlvbiB9LFxuICBjb3VudHM6IHt9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gcmVkdWNlcihzdGF0ZTogU3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbjogQ29tbWVudEFjdGlvbnMuQW55KTogU3RhdGUge1xuICBpZiAoc3RhdGUgPT09IG51bGwpIHN0YXRlID0gaW5pdGlhbFN0YXRlO1xuXG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIENvbW1lbnRBY3Rpb25zLkNoYW5nZUZvcm1Nb2RlVG9FZGl0LlR5cGU6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLkNvbW1vbi5jbG9uZShzdGF0ZSksXG4gICAgICAgIGZvcm1Nb2RlOiAnRURJVCcsXG4gICAgICAgIGZvcm1TdWJtaXRMYWJlbDogJ0NPTU1FTlRTLlNBVkVfQlROX0xBQkVMJyxcbiAgICAgICAgY29tbWVudEJlaW5nRWRpdGVkOiBhY3Rpb24uY29tbWVudEJlaW5nRWRpdGVkXG4gICAgICB9O1xuICAgIH1cblxuICAgIGNhc2UgQ29tbWVudEFjdGlvbnMuQ2hhbmdlRm9ybU1vZGVUb0FkZC5UeXBlOiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5Db21tb24uY2xvbmUoc3RhdGUpLFxuICAgICAgICBmb3JtTW9kZTogJ0FERCcsXG4gICAgICAgIGZvcm1TdWJtaXRMYWJlbDogJ0NPTU1FTlRTLlNVQk1JVF9CVE5fTEFCRUwnLFxuICAgICAgICBjb21tZW50QmVpbmdFZGl0ZWQ6IG51bGxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY2FzZSBDb21tZW50QWN0aW9ucy5Mb2FkLlR5cGU6XG4gICAgY2FzZSBDb21tZW50QWN0aW9ucy5SZW1vdmUuVHlwZToge1xuICAgICAgY29uc3QgYWN0aXZlT2JqZWN0VHlwZTogT2JqZWN0VHlwZSA9IGFjdGlvbi5wYXJlbnRPYmplY3QubmVzdGVkT2JqZWN0SWRcbiAgICAgICAgPyAnbGluZUl0ZW0nXG4gICAgICAgIDogYWN0aW9uLnBhcmVudE9iamVjdC5vYmplY3RUeXBlO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uQ29tbW9uLmNsb25lKHN0YXRlKSxcbiAgICAgICAgYWN0aXZlT2JqZWN0VHlwZTogYWN0aXZlT2JqZWN0VHlwZVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBjYXNlIENvbW1lbnRBY3Rpb25zLkZvcm1TdWJtaXRTdWNjZXNzLlR5cGU6XG4gICAgY2FzZSBDb21tZW50QWN0aW9ucy5SZW1vdmVTdWNjZXNzLlR5cGU6XG4gICAgY2FzZSBDb21tZW50QWN0aW9ucy5Mb2FkU3VjY2Vzcy5UeXBlOiB7XG4gICAgICBjb25zdCBzdGF0ZUNsb25lOiBTdGF0ZSA9IENvbW1vbi5jbG9uZShzdGF0ZSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZUNsb25lLFxuICAgICAgICBbc3RhdGVDbG9uZS5hY3RpdmVPYmplY3RUeXBlXToge1xuICAgICAgICAgIC4uLmFjdGlvbi5jb21tZW50c1xuICAgICAgICB9LFxuICAgICAgICBmb3JtTW9kZTogJ0FERCcsXG4gICAgICAgIGZvcm1TdWJtaXRMYWJlbDogJ0NPTU1FTlRTLlNVQk1JVF9CVE5fTEFCRUwnLFxuICAgICAgICBjb21tZW50QmVpbmdFZGl0ZWQ6IG51bGxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgY2FzZSBDb21tZW50QWN0aW9ucy5HZXRDb3VudHNTdWNjZXNzLlR5cGU6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLkNvbW1vbi5jbG9uZShzdGF0ZSksXG4gICAgICAgIGNvdW50czogYWN0aW9uLmNvdW50c1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBjYXNlIENvbW1lbnRBY3Rpb25zLkZvcm1TdWJtaXQuVHlwZToge1xuICAgICAgY29uc3Qgc3RhdGVDbG9uZTogU3RhdGUgPSBDb21tb24uY2xvbmUoc3RhdGUpO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZUNsb25lLFxuICAgICAgICBjb21tZW50QmVpbmdFZGl0ZWQ6IHtcbiAgICAgICAgICAuLi5zdGF0ZUNsb25lLmNvbW1lbnRCZWluZ0VkaXRlZCwgLi4uYWN0aW9uLmNvbW1lbnRcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBkZWZhdWx0OiB7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuICB9XG59XG4iXX0=
