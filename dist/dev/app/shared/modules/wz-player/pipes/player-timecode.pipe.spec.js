"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var player_timecode_pipe_1 = require("./player-timecode.pipe");
var index_1 = require("../../wazee-frame-formatter/index");
function main() {
    describe('Player Timecode Pipe', function () {
        var pipeUnderTest;
        beforeEach(function () {
            pipeUnderTest = new player_timecode_pipe_1.PlayerTimecodePipe();
        });
        var frame = new index_1.Frame(30, '00:00:01:00').setFromFrameNumber(47);
        var state = { timecodeFormat: index_1.TimecodeFormat.SECONDS, timecodeBase: index_1.TimecodeBase.SOURCE_BASED };
        var tests = [
            { frame: undefined, state: undefined, format: undefined, base: undefined, expected: '' },
            { frame: undefined, state: undefined, format: undefined, base: null, expected: '' },
            { frame: undefined, state: undefined, format: undefined, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: undefined, state: undefined, format: undefined, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: undefined, state: undefined, format: null, base: undefined, expected: '' },
            { frame: undefined, state: undefined, format: null, base: null, expected: '' },
            { frame: undefined, state: undefined, format: null, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: undefined, state: undefined, format: null, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: undefined, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: undefined, expected: '' },
            { frame: undefined, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: null, expected: '' },
            {
                frame: undefined, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.STREAM_BASED,
                expected: ''
            },
            {
                frame: undefined, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.SOURCE_BASED,
                expected: ''
            },
            { frame: undefined, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: undefined, expected: '' },
            { frame: undefined, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: null, expected: '' },
            { frame: undefined, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: undefined, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: undefined, state: null, format: undefined, base: undefined, expected: '' },
            { frame: undefined, state: null, format: undefined, base: null, expected: '' },
            { frame: undefined, state: null, format: undefined, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: undefined, state: null, format: undefined, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: undefined, state: null, format: null, base: undefined, expected: '' },
            { frame: undefined, state: null, format: null, base: null, expected: '' },
            { frame: undefined, state: null, format: null, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: undefined, state: null, format: null, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: undefined, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: undefined, expected: '' },
            { frame: undefined, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: null, expected: '' },
            {
                frame: undefined, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.STREAM_BASED,
                expected: ''
            },
            {
                frame: undefined, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION,
                base: index_1.TimecodeBase.SOURCE_BASED, expected: ''
            },
            { frame: undefined, state: null, format: index_1.TimecodeFormat.SECONDS, base: undefined, expected: '' },
            { frame: undefined, state: null, format: index_1.TimecodeFormat.SECONDS, base: null, expected: '' },
            { frame: undefined, state: null, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: undefined, state: null, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: undefined, state: state, format: undefined, base: undefined, expected: '' },
            { frame: undefined, state: state, format: undefined, base: null, expected: '' },
            { frame: undefined, state: state, format: undefined, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: undefined, state: state, format: undefined, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: undefined, state: state, format: null, base: undefined, expected: '' },
            { frame: undefined, state: state, format: null, base: null, expected: '' },
            { frame: undefined, state: state, format: null, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: undefined, state: state, format: null, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: undefined, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: undefined, expected: '' },
            { frame: undefined, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: null, expected: '' },
            {
                frame: undefined, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.STREAM_BASED,
                expected: ''
            },
            {
                frame: undefined, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.SOURCE_BASED,
                expected: ''
            },
            { frame: undefined, state: state, format: index_1.TimecodeFormat.SECONDS, base: undefined, expected: '' },
            { frame: undefined, state: state, format: index_1.TimecodeFormat.SECONDS, base: null, expected: '' },
            { frame: undefined, state: state, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: undefined, state: state, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: null, state: undefined, format: undefined, base: undefined, expected: '' },
            { frame: null, state: undefined, format: undefined, base: null, expected: '' },
            { frame: null, state: undefined, format: undefined, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: null, state: undefined, format: undefined, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: null, state: undefined, format: null, base: undefined, expected: '' },
            { frame: null, state: undefined, format: null, base: null, expected: '' },
            { frame: null, state: undefined, format: null, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: null, state: undefined, format: null, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: null, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: undefined, expected: '' },
            { frame: null, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: null, expected: '' },
            {
                frame: null, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.STREAM_BASED,
                expected: ''
            },
            {
                frame: null, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.SOURCE_BASED,
                expected: ''
            },
            { frame: null, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: undefined, expected: '' },
            { frame: null, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: null, expected: '' },
            { frame: null, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: null, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: null, state: null, format: undefined, base: undefined, expected: '' },
            { frame: null, state: null, format: undefined, base: null, expected: '' },
            { frame: null, state: null, format: undefined, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: null, state: null, format: undefined, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: null, state: null, format: null, base: undefined, expected: '' },
            { frame: null, state: null, format: null, base: null, expected: '' },
            { frame: null, state: null, format: null, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: null, state: null, format: null, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: null, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: undefined, expected: '' },
            { frame: null, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: null, expected: '' },
            {
                frame: null, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.STREAM_BASED,
                expected: ''
            },
            {
                frame: null, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION,
                base: index_1.TimecodeBase.SOURCE_BASED, expected: ''
            },
            { frame: null, state: null, format: index_1.TimecodeFormat.SECONDS, base: undefined, expected: '' },
            { frame: null, state: null, format: index_1.TimecodeFormat.SECONDS, base: null, expected: '' },
            { frame: null, state: null, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: null, state: null, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: null, state: state, format: undefined, base: undefined, expected: '' },
            { frame: null, state: state, format: undefined, base: null, expected: '' },
            { frame: null, state: state, format: undefined, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: null, state: state, format: undefined, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: null, state: state, format: null, base: undefined, expected: '' },
            { frame: null, state: state, format: null, base: null, expected: '' },
            { frame: null, state: state, format: null, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: null, state: state, format: null, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: null, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: undefined, expected: '' },
            { frame: null, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: null, expected: '' },
            {
                frame: null, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.STREAM_BASED,
                expected: ''
            },
            {
                frame: null, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.SOURCE_BASED,
                expected: ''
            },
            { frame: null, state: state, format: index_1.TimecodeFormat.SECONDS, base: undefined, expected: '' },
            { frame: null, state: state, format: index_1.TimecodeFormat.SECONDS, base: null, expected: '' },
            { frame: null, state: state, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.STREAM_BASED, expected: '' },
            { frame: null, state: state, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.SOURCE_BASED, expected: '' },
            { frame: frame, state: undefined, format: undefined, base: undefined, expected: '00:00:01;17' },
            { frame: frame, state: undefined, format: undefined, base: null, expected: '00:00:01;17' },
            { frame: frame, state: undefined, format: undefined, base: index_1.TimecodeBase.STREAM_BASED, expected: '00:00:01;17' },
            { frame: frame, state: undefined, format: undefined, base: index_1.TimecodeBase.SOURCE_BASED, expected: '00:00:02;17' },
            { frame: frame, state: undefined, format: null, base: undefined, expected: '00:00:01;17' },
            { frame: frame, state: undefined, format: null, base: null, expected: '00:00:01;17' },
            { frame: frame, state: undefined, format: null, base: index_1.TimecodeBase.STREAM_BASED, expected: '00:00:01;17' },
            { frame: frame, state: undefined, format: null, base: index_1.TimecodeBase.SOURCE_BASED, expected: '00:00:02;17' },
            { frame: frame, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: undefined, expected: '00:00:01;17' },
            { frame: frame, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: null, expected: '00:00:01;17' },
            {
                frame: frame, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.STREAM_BASED,
                expected: '00:00:01;17'
            },
            {
                frame: frame, state: undefined, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.SOURCE_BASED,
                expected: '00:00:02;17'
            },
            { frame: frame, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: undefined, expected: '1.567' },
            { frame: frame, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: null, expected: '1.567' },
            { frame: frame, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.STREAM_BASED, expected: '1.567' },
            { frame: frame, state: undefined, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.SOURCE_BASED, expected: '2.567' },
            { frame: frame, state: null, format: undefined, base: undefined, expected: '00:00:01;17' },
            { frame: frame, state: null, format: undefined, base: null, expected: '00:00:01;17' },
            { frame: frame, state: null, format: undefined, base: index_1.TimecodeBase.STREAM_BASED, expected: '00:00:01;17' },
            { frame: frame, state: null, format: undefined, base: index_1.TimecodeBase.SOURCE_BASED, expected: '00:00:02;17' },
            { frame: frame, state: null, format: null, base: undefined, expected: '00:00:01;17' },
            { frame: frame, state: null, format: null, base: null, expected: '00:00:01;17' },
            { frame: frame, state: null, format: null, base: index_1.TimecodeBase.STREAM_BASED, expected: '00:00:01;17' },
            { frame: frame, state: null, format: null, base: index_1.TimecodeBase.SOURCE_BASED, expected: '00:00:02;17' },
            { frame: frame, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: undefined, expected: '00:00:01;17' },
            { frame: frame, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: null, expected: '00:00:01;17' },
            {
                frame: frame, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.STREAM_BASED,
                expected: '00:00:01;17'
            },
            {
                frame: frame, state: null, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION,
                base: index_1.TimecodeBase.SOURCE_BASED, expected: '00:00:02;17'
            },
            { frame: frame, state: null, format: index_1.TimecodeFormat.SECONDS, base: undefined, expected: '1.567' },
            { frame: frame, state: null, format: index_1.TimecodeFormat.SECONDS, base: null, expected: '1.567' },
            { frame: frame, state: null, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.STREAM_BASED, expected: '1.567' },
            { frame: frame, state: null, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.SOURCE_BASED, expected: '2.567' },
            { frame: frame, state: state, format: undefined, base: undefined, expected: '2.567' },
            { frame: frame, state: state, format: undefined, base: null, expected: '2.567' },
            { frame: frame, state: state, format: undefined, base: index_1.TimecodeBase.STREAM_BASED, expected: '1.567' },
            { frame: frame, state: state, format: undefined, base: index_1.TimecodeBase.SOURCE_BASED, expected: '2.567' },
            { frame: frame, state: state, format: null, base: undefined, expected: '2.567' },
            { frame: frame, state: state, format: null, base: null, expected: '2.567' },
            { frame: frame, state: state, format: null, base: index_1.TimecodeBase.STREAM_BASED, expected: '1.567' },
            { frame: frame, state: state, format: null, base: index_1.TimecodeBase.SOURCE_BASED, expected: '2.567' },
            { frame: frame, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: undefined, expected: '00:00:02;17' },
            { frame: frame, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: null, expected: '00:00:02;17' },
            {
                frame: frame, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.STREAM_BASED,
                expected: '00:00:01;17'
            },
            {
                frame: frame, state: state, format: index_1.TimecodeFormat.SIMPLE_TIME_CONVERSION, base: index_1.TimecodeBase.SOURCE_BASED,
                expected: '00:00:02;17'
            },
            { frame: frame, state: state, format: index_1.TimecodeFormat.SECONDS, base: undefined, expected: '2.567' },
            { frame: frame, state: state, format: index_1.TimecodeFormat.SECONDS, base: null, expected: '2.567' },
            { frame: frame, state: state, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.STREAM_BASED, expected: '1.567' },
            { frame: frame, state: state, format: index_1.TimecodeFormat.SECONDS, base: index_1.TimecodeBase.SOURCE_BASED, expected: '2.567' },
        ];
        tests.forEach(function (test) {
            var frameDescription = (test.frame === null ? 'a null' : test.frame ? 'a defined' : 'an undefined') + " frame";
            var stateDescription = (test.state === null ? 'a null' : test.state ? 'a defined' : 'an undefined') + " state";
            var formatDescription = test.format === null ? 'null' : test.format ? index_1.TimecodeFormat[test.format] : 'undefined';
            var baseDescription = test.base === null ? 'null' : test.base ? index_1.TimecodeBase[test.base] : 'undefined';
            var description = "transforms " + frameDescription + " with " + stateDescription + ", format = " + formatDescription + ","
                + (" and base = " + baseDescription + " as expected");
            it(description, function () {
                if (typeof test.format === 'undefined' && typeof test.base === 'undefined') {
                    expect(pipeUnderTest.transform(test.frame, test.state)).toEqual(test.expected);
                }
                else if (typeof test.base === 'undefined') {
                    expect(pipeUnderTest.transform(test.frame, test.state, test.format)).toEqual(test.expected);
                }
                else {
                    expect(pipeUnderTest.transform(test.frame, test.state, test.format, test.base)).toEqual(test.expected);
                }
            });
        });
    });
}
exports.main = main;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
