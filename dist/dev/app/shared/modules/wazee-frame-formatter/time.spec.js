"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var time_1 = require("./time");
function main() {
    describe('Time', function () {
        var timeUnderTest;
        beforeEach(function () {
            timeUnderTest = new time_1.Time(23.976);
        });
        it('stores frames', function () {
            timeUnderTest.frames = 1;
            expect(timeUnderTest.frames).toBe(1);
        });
        it('stores seconds', function () {
            timeUnderTest.seconds = 2;
            expect(timeUnderTest.seconds).toBe(2);
        });
        it('stores minutes', function () {
            timeUnderTest.minutes = 3;
            expect(timeUnderTest.minutes).toBe(3);
        });
        it('stores hours', function () {
            timeUnderTest.hours = 4;
            expect(timeUnderTest.hours).toBe(4);
        });
        it('rolls frames to seconds when it should', function () {
            timeUnderTest.frames = 24;
            expect(timeUnderTest.seconds).toBe(1);
            expect(timeUnderTest.frames).toBe(0);
        });
        it('rolls seconds to minutes when it should', function () {
            timeUnderTest.seconds = 62;
            expect(timeUnderTest.minutes).toBe(1);
            expect(timeUnderTest.seconds).toBe(2);
        });
        it('rolls minutes to hours when it should', function () {
            timeUnderTest.minutes = 127;
            expect(timeUnderTest.hours).toBe(2);
            expect(timeUnderTest.minutes).toBe(7);
        });
        describe('clear()', function () {
            it('works', function () {
                timeUnderTest.hours = 1;
                timeUnderTest.minutes = 2;
                timeUnderTest.seconds = 3;
                timeUnderTest.frames = 4;
                timeUnderTest.clear();
                expect(timeUnderTest.hours).toBe(0);
                expect(timeUnderTest.minutes).toBe(0);
                expect(timeUnderTest.seconds).toBe(0);
                expect(timeUnderTest.frames).toBe(0);
            });
        });
        describe('addFrames()', function () {
            it('adds frames', function () {
                timeUnderTest.frames = 4;
                timeUnderTest.addFrames(7);
                expect(timeUnderTest.frames).toBe(11);
            });
        });
        describe('hoursMultipleOf()', function () {
            it('works for a multiple', function () {
                timeUnderTest.hours = 14;
                expect(timeUnderTest.hoursMultipleOf(7)).toBe(true);
            });
            it('works for a non-multiple', function () {
                timeUnderTest.hours = 13;
                expect(timeUnderTest.hoursMultipleOf(7)).toBe(false);
            });
        });
        describe('minutesMultipleOf()', function () {
            it('works for a multiple', function () {
                timeUnderTest.minutes = 42;
                expect(timeUnderTest.minutesMultipleOf(7)).toBe(true);
            });
            it('works for a non-multiple', function () {
                timeUnderTest.minutes = 47;
                expect(timeUnderTest.minutesMultipleOf(7)).toBe(false);
            });
        });
        describe('minutesOneOf()', function () {
            it('works for an included minute', function () {
                timeUnderTest.minutes = 47;
                expect(timeUnderTest.minutesOneOf(1, 9, 34, 47, 55)).toBe(true);
            });
            it('works for an excluded minute', function () {
                timeUnderTest.minutes = 47;
                expect(timeUnderTest.minutesOneOf(1, 9, 34, 42, 55)).toBe(false);
            });
        });
        describe('asFrameNumber()', function () {
            it('works', function () {
                timeUnderTest.hours = 1;
                timeUnderTest.minutes = 2;
                timeUnderTest.seconds = 3;
                timeUnderTest.frames = 4;
                expect(timeUnderTest.asFrameNumber()).toBe((1 * 60 * 60 + 2 * 60 + 3) * 24 + 4);
            });
        });
        describe('totalWholeSeconds()', function () {
            it('works', function () {
                timeUnderTest.hours = 1;
                timeUnderTest.minutes = 2;
                timeUnderTest.seconds = 3;
                timeUnderTest.frames = 4;
                expect(timeUnderTest.totalWholeSeconds()).toBe(1 * 60 * 60 + 2 * 60 + 3);
            });
        });
    });
}
exports.main = main;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
